name: Upload reports to Box (Client Credentials)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install yfinance matplotlib pandas scikit-learn
          pip install PyJWT cryptography
          sudo apt-get update && sudo apt-get install -y jq curl

      # ===============================
      #  Box Client Credentials 認証
      # ===============================
      - name: Get Box access token (Client Credentials)
        id: box_token
        env:
          BOX_CLIENT_ID: ${{ secrets.BOX_CLIENT_ID }}
          BOX_CLIENT_SECRET: ${{ secrets.BOX_CLIENT_SECRET }}
          BOX_SUBJECT_TYPE: ${{ secrets.BOX_SUBJECT_TYPE }}   # "user"
          BOX_SUBJECT_ID: ${{ secrets.BOX_SUBJECT_ID }}       # あなたのBoxユーザーID
        run: |
          set -e

          # Pythonファイルを安全に生成（heredoc不使用）
          printf "%s\n" \
"import os, sys, json, subprocess" \
"" \
"CLIENT_ID = os.environ['BOX_CLIENT_ID']" \
"CLIENT_SECRET = os.environ['BOX_CLIENT_SECRET']" \
"SUBJECT_TYPE = os.environ['BOX_SUBJECT_TYPE']" \
"SUBJECT_ID = os.environ['BOX_SUBJECT_ID']" \
"" \
"cmd = [" \
"  'curl','-sS','-X','POST','https://api.box.com/oauth2/token'," \
"  '-H','Content-Type: application/x-www-form-urlencoded'," \
"  '--data-urlencode','grant_type=client_credentials'," \
"  '--data-urlencode',f'client_id={CLIENT_ID}'," \
"  '--data-urlencode',f'client_secret={CLIENT_SECRET}'," \
"  '--data-urlencode',f'box_subject_type={SUBJECT_TYPE}'," \
"  '--data-urlencode',f'box_subject_id={SUBJECT_ID}'," \
"]" \
"" \
"resp = subprocess.check_output(cmd)" \
"data = json.loads(resp.decode())" \
"token = data.get('access_token')" \
"if not token:" \
"    print('Failed to obtain Box access token', file=sys.stderr)" \
"    print(data)" \
"    sys.exit(1)" \
"" \
"with open(os.environ['GITHUB_ENV'], 'a') as f:" \
"    f.write(f'BOX_TOKEN={token}\\n')" \
> get_token.py

          python get_token.py

      # ===============================
      #  Boxへアップロード（上書き対応）
      # ===============================
      - name: Define upload helper
        run: |
          cat > upload_or_update.sh <<'EOS'
          #!/usr/bin/env bash
          set -euo pipefail
          FILEPATH="$1"
          BASENAME="$(basename "$FILEPATH")"
          FOLDER_ID="${BOX_FOLDER_ID:-0}"

          echo "Uploading $BASENAME ..."

          ITEMS_JSON="$(curl -sS -H "Authorization: Bearer ${BOX_TOKEN}" \
            "https://api.box.com/2.0/folders/${FOLDER_ID}/items?fields=id,name&limit=1000")"

          FILE_ID="$(echo "$ITEMS_JSON" | jq -r --arg NAME "$BASENAME" '.entries[] | select(.name == $NAME) | .id' | head -n1 || true)"

          if [[ -n "${FILE_ID}" && "${FILE_ID}" != "null" ]]; then
            echo "Updating ${BASENAME} (id=${FILE_ID})"
            curl -fS -X POST "https://upload.box.com/api/2.0/files/${FILE_ID}/content" \
              -H "Authorization: Bearer ${BOX_TOKEN}" \
              -F "file=@${FILEPATH}"
          else
            echo "Uploading ${BASENAME} to folder ${FOLDER_ID}"
            curl -fS "https://upload.box.com/api/2.0/files/content" \
              -H "Authorization: Bearer ${BOX_TOKEN}" \
              -F "attributes={\"name\":\"${BASENAME}\",\"parent\":{\"id\":\"${FOLDER_ID}\"}}" \
              -F "file=@${FILEPATH}"
          fi
          echo "✅ Done: ${BASENAME}"
          EOS
          chmod +x upload_or_update.sh

      - name: Upload reports to Box
        env:
          BOX_FOLDER_ID: ${{ secrets.BOX_FOLDER_ID }}
        run: |
          ./upload_or_update.sh reports/price_with_trades.png
          ./upload_or_update.sh reports/equity_curve.png
          ./upload_or_update.sh reports/trades.csv
          ./upload_or_update.sh reports/metrics.txt
