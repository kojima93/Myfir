name: backtest-and-report

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  run:
    runs-on: ubuntu-latest

    # 固定トークンは使わない。フォルダIDだけ共通envに置く
    env:
      BOX_FOLDER_ID: ${{ secrets.BOX_FOLDER_ID }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt || true
          pip install yfinance matplotlib pandas scikit-learn
          sudo apt-get update && sudo apt-get install -y jq

      - name: Run backtest
        run: python main.py

      # ★ CCGで毎回アクセストークン発行（Developer Token 不要）
      - name: Get Box access token (Client Credentials)
        env:
          BOX_CLIENT_ID: ${{ secrets.BOX_CLIENT_ID }}
          BOX_CLIENT_SECRET: ${{ secrets.BOX_CLIENT_SECRET }}
          BOX_SUBJECT_TYPE: ${{ secrets.BOX_SUBJECT_TYPE }}  # 個人は "user"
          BOX_SUBJECT_ID: ${{ secrets.BOX_SUBJECT_ID }}      # あなたの Box ユーザーID（数値）
        run: |
          set -e
          RESP=$(curl -sS -X POST https://api.box.com/oauth2/token \
            -H "Content-Type: application/x-www-form-urlencoded" \
            --data-urlencode "grant_type=client_credentials" \
            --data-urlencode "client_id=${BOX_CLIENT_ID}" \
            --data-urlencode "client_secret=${BOX_CLIENT_SECRET}" \
            --data-urlencode "box_subject_type=${BOX_SUBJECT_TYPE}" \
            --data-urlencode "box_subject_id=${BOX_SUBJECT_ID}")
          echo "$RESP" | jq .
          TOKEN=$(echo "$RESP" | jq -r '.access_token')
          if [ -z "$TOKEN" ] || [ "$TOKEN" = "null" ]; then
            echo "Failed to obtain Box access token"; exit 1
          fi
          # 以降のステップが使えるようにBOX_TOKENを公開
          echo "BOX_TOKEN=$TOKEN" >> "$GITHUB_ENV"

      # 同名があれば上書き／なければ新規アップロード
      - name: Define upload helper
        shell: bash
        run: |
          cat << 'EOS' > upload_or_update.sh
          #!/usr/bin/env bash
          set -euo pipefail
          FILEPATH="$1"
          BASENAME="$(basename "$FILEPATH")"

          # フォルダ内のファイル一覧から同名ファイルのIDを取得
          ITEMS_JSON="$(curl -sS -H "Authorization: Bearer ${BOX_TOKEN}" \
            "https://api.box.com/2.0/folders/${BOX_FOLDER_ID}/items?fields=id,name&limit=1000")"
          FILE_ID="$(echo "$ITEMS_JSON" | jq -r --arg NAME "$BASENAME" '.entries[] | select(.name == $NAME) | .id' | head -n1 || true)"

          if [[ -n "${FILE_ID}" && "${FILE_ID}" != "null" ]]; then
            echo "Updating ${BASENAME} (id=${FILE_ID})"
            curl -fS -X POST "https://upload.box.com/api/2.0/files/${FILE_ID}/content" \
              -H "Authorization: Bearer ${BOX_TOKEN}" \
              -F "file=@${FILEPATH}"
          else
            echo "Uploading ${BASENAME} to folder ${BOX_FOLDER_ID}"
            curl -fS "https://upload.box.com/api/2.0/files/content" \
              -H "Authorization: Bearer ${BOX_TOKEN}" \
              -F "attributes={\"name\":\"${BASENAME}\",\"parent\":{\"id\":\"${BOX_FOLDER_ID}\"}}" \
              -F "file=@${FILEPATH}"
          fi
          echo "Done: ${BASENAME}"
          EOS
          chmod +x upload_or_update.sh

      - name: Upload reports to Box (overwrite if exists)
        run: |
          ./upload_or_update.sh reports/price_with_trades.png
          ./upload_or_update.sh reports/equity_curve.png
          ./upload_or_update.sh reports/trades.csv
          ./upload_or_update.sh reports/metrics.txt
